# coding: utf-8

"""
    Mailchimp Marketing API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 3.0.74
    Contact: apihelp@mailchimp.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CampaignDefaults(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'from_name': 'str',
        'from_email': 'str',
        'subject': 'str',
        'language': 'str'
    }

    attribute_map = {
        'from_name': 'from_name',
        'from_email': 'from_email',
        'subject': 'subject',
        'language': 'language'
    }

    def __init__(self, from_name=None, from_email=None, subject=None, language=None):  # noqa: E501
        """CampaignDefaults - a model defined in Swagger"""  # noqa: E501

        self._from_name = None
        self._from_email = None
        self._subject = None
        self._language = None
        self.discriminator = None

        if from_name is not None:
            self.from_name = from_name
        if from_email is not None:
            self.from_email = from_email
        if subject is not None:
            self.subject = subject
        if language is not None:
            self.language = language

    @property
    def from_name(self):
        """Gets the from_name of this CampaignDefaults.  # noqa: E501

        The default from name for campaigns sent to this list.  # noqa: E501

        :return: The from_name of this CampaignDefaults.  # noqa: E501
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this CampaignDefaults.

        The default from name for campaigns sent to this list.  # noqa: E501

        :param from_name: The from_name of this CampaignDefaults.  # noqa: E501
        :type: str
        """

        self._from_name = from_name

    @property
    def from_email(self):
        """Gets the from_email of this CampaignDefaults.  # noqa: E501

        The default from email for campaigns sent to this list.  # noqa: E501

        :return: The from_email of this CampaignDefaults.  # noqa: E501
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this CampaignDefaults.

        The default from email for campaigns sent to this list.  # noqa: E501

        :param from_email: The from_email of this CampaignDefaults.  # noqa: E501
        :type: str
        """

        self._from_email = from_email

    @property
    def subject(self):
        """Gets the subject of this CampaignDefaults.  # noqa: E501

        The default subject line for campaigns sent to this list.  # noqa: E501

        :return: The subject of this CampaignDefaults.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this CampaignDefaults.

        The default subject line for campaigns sent to this list.  # noqa: E501

        :param subject: The subject of this CampaignDefaults.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def language(self):
        """Gets the language of this CampaignDefaults.  # noqa: E501

        The default language for this lists's forms.  # noqa: E501

        :return: The language of this CampaignDefaults.  # noqa: E501
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this CampaignDefaults.

        The default language for this lists's forms.  # noqa: E501

        :param language: The language of this CampaignDefaults.  # noqa: E501
        :type: str
        """

        self._language = language

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CampaignDefaults, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CampaignDefaults):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
