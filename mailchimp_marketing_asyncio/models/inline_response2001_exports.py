# coding: utf-8

"""
    Mailchimp Marketing API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 3.0.74
    Contact: apihelp@mailchimp.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InlineResponse2001Exports(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'export_id': 'int',
        'started': 'datetime',
        'finished': 'datetime',
        'size_in_bytes': 'int',
        'download_url': 'str',
        'links': 'list[ResourceLink]'
    }

    attribute_map = {
        'export_id': 'export_id',
        'started': 'started',
        'finished': 'finished',
        'size_in_bytes': 'size_in_bytes',
        'download_url': 'download_url',
        'links': '_links'
    }

    def __init__(self, export_id=None, started=None, finished=None, size_in_bytes=None, download_url=None, links=None):  # noqa: E501
        """InlineResponse2001Exports - a model defined in Swagger"""  # noqa: E501

        self._export_id = None
        self._started = None
        self._finished = None
        self._size_in_bytes = None
        self._download_url = None
        self._links = None
        self.discriminator = None

        if export_id is not None:
            self.export_id = export_id
        if started is not None:
            self.started = started
        if finished is not None:
            self.finished = finished
        if size_in_bytes is not None:
            self.size_in_bytes = size_in_bytes
        if download_url is not None:
            self.download_url = download_url
        if links is not None:
            self.links = links

    @property
    def export_id(self):
        """Gets the export_id of this InlineResponse2001Exports.  # noqa: E501

        The ID for the export.  # noqa: E501

        :return: The export_id of this InlineResponse2001Exports.  # noqa: E501
        :rtype: int
        """
        return self._export_id

    @export_id.setter
    def export_id(self, export_id):
        """Sets the export_id of this InlineResponse2001Exports.

        The ID for the export.  # noqa: E501

        :param export_id: The export_id of this InlineResponse2001Exports.  # noqa: E501
        :type: int
        """

        self._export_id = export_id

    @property
    def started(self):
        """Gets the started of this InlineResponse2001Exports.  # noqa: E501

        Start time for the export.  # noqa: E501

        :return: The started of this InlineResponse2001Exports.  # noqa: E501
        :rtype: datetime
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this InlineResponse2001Exports.

        Start time for the export.  # noqa: E501

        :param started: The started of this InlineResponse2001Exports.  # noqa: E501
        :type: datetime
        """

        self._started = started

    @property
    def finished(self):
        """Gets the finished of this InlineResponse2001Exports.  # noqa: E501

        If finished, the finish time for the export.  # noqa: E501

        :return: The finished of this InlineResponse2001Exports.  # noqa: E501
        :rtype: datetime
        """
        return self._finished

    @finished.setter
    def finished(self, finished):
        """Sets the finished of this InlineResponse2001Exports.

        If finished, the finish time for the export.  # noqa: E501

        :param finished: The finished of this InlineResponse2001Exports.  # noqa: E501
        :type: datetime
        """

        self._finished = finished

    @property
    def size_in_bytes(self):
        """Gets the size_in_bytes of this InlineResponse2001Exports.  # noqa: E501

        The size of the uncompressed export in bytes.  # noqa: E501

        :return: The size_in_bytes of this InlineResponse2001Exports.  # noqa: E501
        :rtype: int
        """
        return self._size_in_bytes

    @size_in_bytes.setter
    def size_in_bytes(self, size_in_bytes):
        """Sets the size_in_bytes of this InlineResponse2001Exports.

        The size of the uncompressed export in bytes.  # noqa: E501

        :param size_in_bytes: The size_in_bytes of this InlineResponse2001Exports.  # noqa: E501
        :type: int
        """

        self._size_in_bytes = size_in_bytes

    @property
    def download_url(self):
        """Gets the download_url of this InlineResponse2001Exports.  # noqa: E501

        If the export is finished, the download URL for an export. URLs are only valid for 90 days after the export completes.  # noqa: E501

        :return: The download_url of this InlineResponse2001Exports.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this InlineResponse2001Exports.

        If the export is finished, the download URL for an export. URLs are only valid for 90 days after the export completes.  # noqa: E501

        :param download_url: The download_url of this InlineResponse2001Exports.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def links(self):
        """Gets the links of this InlineResponse2001Exports.  # noqa: E501

        A list of link types and descriptions for the API schema documents.  # noqa: E501

        :return: The links of this InlineResponse2001Exports.  # noqa: E501
        :rtype: list[ResourceLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this InlineResponse2001Exports.

        A list of link types and descriptions for the API schema documents.  # noqa: E501

        :param links: The links of this InlineResponse2001Exports.  # noqa: E501
        :type: list[ResourceLink]
        """

        self._links = links

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2001Exports, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2001Exports):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
