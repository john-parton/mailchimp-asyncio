# coding: utf-8

"""
    Mailchimp Marketing API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 3.0.74
    Contact: apihelp@mailchimp.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class InlineResponse20011ReportSummary(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'reach': 'int',
        'impressions': 'int',
        'clicks': 'int',
        'click_rate': 'float',
        'unique_clicks': 'int',
        'first_time_buyers': 'int',
        'ecommerce': 'InlineResponse20011ReportSummaryEcommerce',
        'total_products_sold': 'int',
        'total_orders': 'int',
        'average_order_amount': 'InlineResponse20011ReportSummaryAverageOrderAmount',
        'cost_per_click': 'InlineResponse20011ReportSummaryAverageOrderAmount',
        'average_daily_budget': 'InlineResponse20011ReportSummaryAverageOrderAmount',
        'likes': 'int',
        'comments': 'int',
        'shares': 'int',
        'has_extended_ad_duration': 'bool',
        'extended_at': 'InlineResponse20011ReportSummaryExtendedAt',
        'return_on_investment': 'float'
    }

    attribute_map = {
        'reach': 'reach',
        'impressions': 'impressions',
        'clicks': 'clicks',
        'click_rate': 'click_rate',
        'unique_clicks': 'unique_clicks',
        'first_time_buyers': 'first_time_buyers',
        'ecommerce': 'ecommerce',
        'total_products_sold': 'total_products_sold',
        'total_orders': 'total_orders',
        'average_order_amount': 'average_order_amount',
        'cost_per_click': 'cost_per_click',
        'average_daily_budget': 'average_daily_budget',
        'likes': 'likes',
        'comments': 'comments',
        'shares': 'shares',
        'has_extended_ad_duration': 'has_extended_ad_duration',
        'extended_at': 'extended_at',
        'return_on_investment': 'return_on_investment'
    }

    def __init__(self, reach=None, impressions=None, clicks=None, click_rate=None, unique_clicks=None, first_time_buyers=None, ecommerce=None, total_products_sold=None, total_orders=None, average_order_amount=None, cost_per_click=None, average_daily_budget=None, likes=None, comments=None, shares=None, has_extended_ad_duration=None, extended_at=None, return_on_investment=None):  # noqa: E501
        """InlineResponse20011ReportSummary - a model defined in Swagger"""  # noqa: E501

        self._reach = None
        self._impressions = None
        self._clicks = None
        self._click_rate = None
        self._unique_clicks = None
        self._first_time_buyers = None
        self._ecommerce = None
        self._total_products_sold = None
        self._total_orders = None
        self._average_order_amount = None
        self._cost_per_click = None
        self._average_daily_budget = None
        self._likes = None
        self._comments = None
        self._shares = None
        self._has_extended_ad_duration = None
        self._extended_at = None
        self._return_on_investment = None
        self.discriminator = None

        if reach is not None:
            self.reach = reach
        if impressions is not None:
            self.impressions = impressions
        if clicks is not None:
            self.clicks = clicks
        if click_rate is not None:
            self.click_rate = click_rate
        if unique_clicks is not None:
            self.unique_clicks = unique_clicks
        if first_time_buyers is not None:
            self.first_time_buyers = first_time_buyers
        if ecommerce is not None:
            self.ecommerce = ecommerce
        if total_products_sold is not None:
            self.total_products_sold = total_products_sold
        if total_orders is not None:
            self.total_orders = total_orders
        if average_order_amount is not None:
            self.average_order_amount = average_order_amount
        if cost_per_click is not None:
            self.cost_per_click = cost_per_click
        if average_daily_budget is not None:
            self.average_daily_budget = average_daily_budget
        if likes is not None:
            self.likes = likes
        if comments is not None:
            self.comments = comments
        if shares is not None:
            self.shares = shares
        if has_extended_ad_duration is not None:
            self.has_extended_ad_duration = has_extended_ad_duration
        if extended_at is not None:
            self.extended_at = extended_at
        if return_on_investment is not None:
            self.return_on_investment = return_on_investment

    @property
    def reach(self):
        """Gets the reach of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The reach of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._reach

    @reach.setter
    def reach(self, reach):
        """Sets the reach of this InlineResponse20011ReportSummary.


        :param reach: The reach of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._reach = reach

    @property
    def impressions(self):
        """Gets the impressions of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The impressions of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._impressions

    @impressions.setter
    def impressions(self, impressions):
        """Sets the impressions of this InlineResponse20011ReportSummary.


        :param impressions: The impressions of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._impressions = impressions

    @property
    def clicks(self):
        """Gets the clicks of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The clicks of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._clicks

    @clicks.setter
    def clicks(self, clicks):
        """Sets the clicks of this InlineResponse20011ReportSummary.


        :param clicks: The clicks of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._clicks = clicks

    @property
    def click_rate(self):
        """Gets the click_rate of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The click_rate of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: float
        """
        return self._click_rate

    @click_rate.setter
    def click_rate(self, click_rate):
        """Sets the click_rate of this InlineResponse20011ReportSummary.


        :param click_rate: The click_rate of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: float
        """

        self._click_rate = click_rate

    @property
    def unique_clicks(self):
        """Gets the unique_clicks of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The unique_clicks of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._unique_clicks

    @unique_clicks.setter
    def unique_clicks(self, unique_clicks):
        """Sets the unique_clicks of this InlineResponse20011ReportSummary.


        :param unique_clicks: The unique_clicks of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._unique_clicks = unique_clicks

    @property
    def first_time_buyers(self):
        """Gets the first_time_buyers of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The first_time_buyers of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._first_time_buyers

    @first_time_buyers.setter
    def first_time_buyers(self, first_time_buyers):
        """Sets the first_time_buyers of this InlineResponse20011ReportSummary.


        :param first_time_buyers: The first_time_buyers of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._first_time_buyers = first_time_buyers

    @property
    def ecommerce(self):
        """Gets the ecommerce of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The ecommerce of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: InlineResponse20011ReportSummaryEcommerce
        """
        return self._ecommerce

    @ecommerce.setter
    def ecommerce(self, ecommerce):
        """Sets the ecommerce of this InlineResponse20011ReportSummary.


        :param ecommerce: The ecommerce of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: InlineResponse20011ReportSummaryEcommerce
        """

        self._ecommerce = ecommerce

    @property
    def total_products_sold(self):
        """Gets the total_products_sold of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The total_products_sold of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._total_products_sold

    @total_products_sold.setter
    def total_products_sold(self, total_products_sold):
        """Sets the total_products_sold of this InlineResponse20011ReportSummary.


        :param total_products_sold: The total_products_sold of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._total_products_sold = total_products_sold

    @property
    def total_orders(self):
        """Gets the total_orders of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The total_orders of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._total_orders

    @total_orders.setter
    def total_orders(self, total_orders):
        """Sets the total_orders of this InlineResponse20011ReportSummary.


        :param total_orders: The total_orders of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._total_orders = total_orders

    @property
    def average_order_amount(self):
        """Gets the average_order_amount of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The average_order_amount of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: InlineResponse20011ReportSummaryAverageOrderAmount
        """
        return self._average_order_amount

    @average_order_amount.setter
    def average_order_amount(self, average_order_amount):
        """Sets the average_order_amount of this InlineResponse20011ReportSummary.


        :param average_order_amount: The average_order_amount of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: InlineResponse20011ReportSummaryAverageOrderAmount
        """

        self._average_order_amount = average_order_amount

    @property
    def cost_per_click(self):
        """Gets the cost_per_click of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The cost_per_click of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: InlineResponse20011ReportSummaryAverageOrderAmount
        """
        return self._cost_per_click

    @cost_per_click.setter
    def cost_per_click(self, cost_per_click):
        """Sets the cost_per_click of this InlineResponse20011ReportSummary.


        :param cost_per_click: The cost_per_click of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: InlineResponse20011ReportSummaryAverageOrderAmount
        """

        self._cost_per_click = cost_per_click

    @property
    def average_daily_budget(self):
        """Gets the average_daily_budget of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The average_daily_budget of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: InlineResponse20011ReportSummaryAverageOrderAmount
        """
        return self._average_daily_budget

    @average_daily_budget.setter
    def average_daily_budget(self, average_daily_budget):
        """Sets the average_daily_budget of this InlineResponse20011ReportSummary.


        :param average_daily_budget: The average_daily_budget of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: InlineResponse20011ReportSummaryAverageOrderAmount
        """

        self._average_daily_budget = average_daily_budget

    @property
    def likes(self):
        """Gets the likes of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The likes of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._likes

    @likes.setter
    def likes(self, likes):
        """Sets the likes of this InlineResponse20011ReportSummary.


        :param likes: The likes of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._likes = likes

    @property
    def comments(self):
        """Gets the comments of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The comments of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this InlineResponse20011ReportSummary.


        :param comments: The comments of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._comments = comments

    @property
    def shares(self):
        """Gets the shares of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The shares of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: int
        """
        return self._shares

    @shares.setter
    def shares(self, shares):
        """Sets the shares of this InlineResponse20011ReportSummary.


        :param shares: The shares of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: int
        """

        self._shares = shares

    @property
    def has_extended_ad_duration(self):
        """Gets the has_extended_ad_duration of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The has_extended_ad_duration of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: bool
        """
        return self._has_extended_ad_duration

    @has_extended_ad_duration.setter
    def has_extended_ad_duration(self, has_extended_ad_duration):
        """Sets the has_extended_ad_duration of this InlineResponse20011ReportSummary.


        :param has_extended_ad_duration: The has_extended_ad_duration of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: bool
        """

        self._has_extended_ad_duration = has_extended_ad_duration

    @property
    def extended_at(self):
        """Gets the extended_at of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The extended_at of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: InlineResponse20011ReportSummaryExtendedAt
        """
        return self._extended_at

    @extended_at.setter
    def extended_at(self, extended_at):
        """Sets the extended_at of this InlineResponse20011ReportSummary.


        :param extended_at: The extended_at of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: InlineResponse20011ReportSummaryExtendedAt
        """

        self._extended_at = extended_at

    @property
    def return_on_investment(self):
        """Gets the return_on_investment of this InlineResponse20011ReportSummary.  # noqa: E501


        :return: The return_on_investment of this InlineResponse20011ReportSummary.  # noqa: E501
        :rtype: float
        """
        return self._return_on_investment

    @return_on_investment.setter
    def return_on_investment(self, return_on_investment):
        """Sets the return_on_investment of this InlineResponse20011ReportSummary.


        :param return_on_investment: The return_on_investment of this InlineResponse20011ReportSummary.  # noqa: E501
        :type: float
        """

        self._return_on_investment = return_on_investment

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20011ReportSummary, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20011ReportSummary):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
